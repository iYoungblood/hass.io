- platform: darksky
  api_key: !secret darksky_api
  monitored_conditions:
    - temperature_max
    - temperature
    - humidity
  update_interval: 600
- platform: yr
- platform: time_date
  display_options:
    - 'time'
####################################################
#                Multisensors                      #
####################################################

####################################################
#                 Master Bedroom                   #

- platform: mqtt
  state_topic: "homeIoT/Multisensors/masterBedroom"
  name: 'Master Bedroom Temperature'
  unit_of_measurement: '°F'
  value_template: '{{ value_json.temperature }}'

- platform: mqtt
  state_topic: "homeIoT/Multisensors/masterBedroom"
  name: 'Master Bedroom Humidity'
  unit_of_measurement: '%'
  value_template: '{{ value_json.humidity }}'
####################################################
#                 Basement Office                  #

- platform: mqtt
  state_topic: "homeIoT/Multisensors/basementOffice"
  name: 'Basement Office Temperature'
  unit_of_measurement: '°F'
  value_template: '{{ value_json.temperature }}'

- platform: mqtt
  state_topic: "homeIoT/Multisensors/basementOffice"
  name: 'Basement Office Humidity'
  unit_of_measurement: '%'
  value_template: '{{ value_json.humidity }}'

- platform: mqtt
  state_topic: "homeIoT/Multisensors/basementOffice"
  name: 'Basement Office Motion'
  #unit_of_measurement: '%'
  value_template: '{{ value_json.motion }}'  
####################################################
#                   Full Bath                      #

- platform: mqtt
  state_topic: "homeIoT/Multisensors/fullBath"
  name: 'Full Bath Temperature'
  unit_of_measurement: '°F'
  value_template: '{{ value_json.temperature }}'

- platform: mqtt
  state_topic: "homeIoT/Multisensors/fullBath"
  name: 'Full Bath Humidity'
  unit_of_measurement: '%'
  value_template: '{{ value_json.humidity }}'

- platform: mqtt
  state_topic: "homeIoT/Multisensors/fullBath"
  name: 'Full Bath Motion'
  #unit_of_measurement: '%'
  value_template: '{{ value_json.motion }}'  
####################################################
#                   Back Porch                     #

- platform: mqtt
  state_topic: "homeIoT/Multisensors/backPorch"
  name: 'Back Porch Temperature'
  unit_of_measurement: '°F'
  value_template: '{{ value_json.temperature }}'

- platform: mqtt
  state_topic: "homeIoT/Multisensors/backPorch"
  name: 'Back Porch Humidity'
  unit_of_measurement: '%'
  value_template: '{{ value_json.humidity }}'

- platform: mqtt
  state_topic: "homeIoT/Multisensors/backPorch"
  name: 'Back Porch Motion'
  #unit_of_measurement: '%'
  value_template: '{{ value_json.motion }}'  
  
####################################################
#                   Front Porch                    #

- platform: mqtt
  state_topic: "homeIoT/Multisensors/frontPorch"
  name: 'Front Porch Temperature'
  unit_of_measurement: '°F'
  value_template: '{{ value_json.temperature }}'

- platform: mqtt
  state_topic: "homeIoT/Multisensors/frontPorch"
  name: 'Front Porch Humidity'
  unit_of_measurement: '%'
  value_template: '{{ value_json.humidity }}'

- platform: mqtt
  state_topic: "homeIoT/Multisensors/frontPorch"
  name: 'Front Porch Motion'
  #unit_of_measurement: '%'
  value_template: '{{ value_json.motion }}'  
####################################################
#                   Hallway                    #

- platform: mqtt
  state_topic: "homeIoT/Multisensors/hallway"
  name: 'Hallway Temperature'
  unit_of_measurement: '°F'
  value_template: '{{ value_json.temperature }}'

- platform: mqtt
  state_topic: "homeIoT/Multisensors/hallway"
  name: 'Hallway Humidity'
  unit_of_measurement: '%'
  value_template: '{{ value_json.humidity }}'

- platform: mqtt
  state_topic: "homeIoT/Multisensors/hallway"
  name: 'Hallway Motion'
  #unit_of_measurement: '%'
  value_template: '{{ value_json.motion }}' 
- platform: mqtt
  state_topic: "homeIoT/Multisensors/hallway"
  name: 'Hallway LDR'
  #unit_of_measurement: '%'
  value_template: '{{ value_json.ldr }}'   
####################################################
#                Multisensors END                  #
####################################################
  
- platform: mqtt
  name: "Adams Phone"
  state_topic: "smartthings/Pixel 2 XL/presence"
    
- platform: mqtt
  name: "Backdoor Temperature"
  state_topic: "smartthings/Back Door Sensor/temperature"
  unit_of_measurement: '°F'

- platform: mqtt
  name: "Front Door Temperature"
  state_topic: "smartthings/Front Door Sensor/temperature"
  unit_of_measurement: '°F'
  
- platform: mqtt
  name: "Front Room Temperature"
  state_topic: "smartthings/Front Room Motion/temperature"
  unit_of_measurement: '°F'
    
- platform: mqtt
  name: "Keychain Battery"
  state_topic: "smartthings/Adams Keys/battery"
  unit_of_measurement: '%'
    
- platform: mqtt
  name: "Front Room Motion Battery"
  state_topic: "smartthings/Front Room Motion/battery"
  unit_of_measurement: '%'    
    
- platform: mqtt
  name: "Backdoor Sensor Battery"
  state_topic: "smartthings/Back Door Sensor/battery"  
  unit_of_measurement: '%'

- platform: mqtt
  name: "Backdoor"
  state_topic: "smartthings/Back Door Sensor/contact" 
  
- platform: mqtt
  name: "Front Door Sensor Battery"
  state_topic: "smartthings/Front Door Sensor/battery"  
  unit_of_measurement: '%'

- platform: mqtt
  name: "Front Door"
  state_topic: "smartthings/Front Door Sensor/contact" 

- platform: mqtt
  name: "Front Room Motion"
  state_topic: "smartthings/Front Room Motion/motion" 
    
- platform: mqtt
  name: "August Battery"
  state_topic: "smartthings/August - Backdoor/battery"  
  unit_of_measurement: '%'
  
# - platform: template
  # sensors:
    # basement_ambient_temp:
      # friendly_name: Basement Temperature
      # unit_of_measurement: '°F'
      # value_template: "{{ (float(states.sensor.basement_cam_battery_temperature.state) * 1.8 + 32) | round(2) }}"

# - platform: template
  # sensors:
    # frontdoor_ambient_temp:
      # friendly_name: Front Door Temperature
      # unit_of_measurement: '°F'
      # value_template: "{{ (float(states.sensor.front_door_cam_battery_temperature.state) * 1.8 + 32) | round(2) }}"

# - platform: template
  # sensors:
    # backyard_ambient_temp:
      # friendly_name: Backyard Temperature
      # unit_of_measurement: '°F'
      # value_template: "{{ (float(states.sensor.back_yard_cam_battery_temperature.state) * 1.8 + 32) | round(2) }}"
      
      
      
#Alarm + Hue Lights
- platform: template
  sensors:
    wakeup_alarm_time:
      friendly_name: 'Alarm time'
      value_template: '{% if states.input_number.wakeup_hour.state|length == 3 %}0{% endif %}{{ states.input_number.wakeup_hour.state | int }}:{% if states.input_number.wakeup_minutes.state|length == 3 %}0{% endif %}{{ states.input_number.wakeup_minutes.state | int }}'

- platform: template
  sensors:
    wakeup_start_time_lights:
      friendly_name: 'Fade-in start time'
      value_template: >
        {% if states.sensor.wakeup_alarm_time and states.input_number.wakeup_duration %}
        {% set alarmtime = states.sensor.wakeup_alarm_time.state %}
        {% set alarm_hour = alarmtime.split(":")[0] | int %}
        {% set alarm_min = alarmtime.split(":")[1] | int %}
        {% set light_dur = states.input_number.wakeup_duration.state | int %}
        {% set alarm_min_light = alarm_min - light_dur %}
        {% if alarm_min_light  < 0 %}
        {% set alarm_min_light = alarm_min_light + 60 %}
        {% set alarm_hour_light = alarm_hour - 1 %}
        {% if alarm_hour_light < 0 %}{% set alarm_hour_light = 23 %}{% endif %}
        {% if alarm_hour_light < 10 %}0{% endif %}{{ alarm_hour_light}}:{% if alarm_min_light < 10 %}0{% endif %}{{ alarm_min_light }}
        {% else %}
        {% if alarm_hour < 10 %}0{% endif %}{{ alarm_hour }}:{% if alarm_min_light < 10 %}0{% endif %}{{ alarm_min_light }}
        {% endif %}
        {% endif %}
- platform: template
  sensors:
    wakeup_fadein_duration:
      friendly_name: 'Fade-in duration'
      value_template: '{{ states.input_number.wakeup_duration.state | int }}'
      unit_of_measurement: 'min'

- platform: template
  sensors:
    wakeup_fadein_duration:
      friendly_name: 'Fade-in duration'
      value_template: '{{ states.input_number.wakeup_duration.state | int }}'
      unit_of_measurement: 'min'

- platform: template
  sensors:
    washer_watts:
      friendly_name: "Washing Machine Power"
      #icon: "mdi:washing-machine"
      unit_of_measurement: "w"
      value_template: "{{states.switch.washer.attributes.current_power_w}}"
      
      
- platform: template
  sensors:
    dishwasher_watts:
      friendly_name: "Dishwasher Machine Power"
      #icon: "mdi:silverware"
      unit_of_measurement: "w"
      value_template: "{{states.switch.dishwasher.attributes.current_power_w}}"
      
- platform: template
  sensors:
    dishwasher_status:
      value_template: '{{ states.input_select.dishwasher_status.state}}'
      friendly_name: 'Dishwasher Status'
- platform: template
  sensors:
    washer_status:
      value_template: '{{ states.input_select.washer_status.state}}'
      friendly_name: 'Washer Status'
- platform: template
  sensors:
    dryer_status:
      value_template: '{{ states.input_select.dryer_status.state}}'
      friendly_name: 'Dryer Status'

      
- platform: template
  sensors:
    brightness_variable:
      friendly_name: "Brightness Variable"
      value_template: '{{ states.light.kitchen.attributes.brightness }}'

- platform: waze_travel_time
  name: Home to Downtown
  origin: !secret home
  destination: 1 Energy Plaza, Detroit,MI
  region: 'US'
- platform: waze_travel_time
  name: Home to Work
  origin: !secret home
  destination: !secret work
  region: 'US'
- platform: waze_travel_time
  name: Work to Home
  origin: !secret work
  destination: !secret home
  region: 'US'
- platform: waze_travel_time
  name: Downtown to Home
  origin: '1 Energy Plaza, Detroit, MI'
  destination: !secret home
  region: 'US'
  
  
  
  
#######################################

#
# System monitor
#
# Lots of geeky details about the server hardware.
#
# @link https://home-assistant.io/components/sensor.systemmonitor/
#
- platform: systemmonitor
  scan_interval: 60
  resources:
    - type: disk_use
      arg: /home
    - type: disk_free
      arg: /home
    - type: ipv4_address
      arg: eth0
    - type: load_1m
    - type: load_5m
    - type: load_15m
    - type: memory_use
    - type: memory_free
    - type: processor_use
    - type: since_last_boot


#
# Version
#
# @link https://home-assistant.io/components/sensor.version/
#
- platform: version


#
# Friendly version report
#
# Useful for HADashboard.
#
# @see /appdaemon/dashboards/Status.dash
#
- platform: template
  sensors:
    version_friendly:
      friendly_name: Home Assistant Version
      icon_template: mdi:update
      value_template: >-
        {% if states('sensor.current_version') != 'unknown' %}
          Home Assistant {{ states('sensor.current_version') }}
        {% else %}
          Home Assistant
        {% endif %}
    update_available:
      friendly_name: Update Available
      icon_template: mdi:update
      value_template: >-
        {% if states('updater.updater') != 'unknown' %}
          Update available: {{ states('updater.updater') }}
        {% endif %}
#
# Disk space
#
# @see /appdaemon/dashboards/Status.dash
# @see /groups/status.yaml
#
- platform: template
  sensors:
    disk_use_percent:
      friendly_name: Disk Use /home
      icon_template: mdi:harddisk
      unit_of_measurement: '%'
      value_template: >-
        {% set disk_use = states('sensor.disk_use_home') | float %}
        {% set disk_free = states('sensor.disk_free_home') | float %}
        {{ (100 * disk_use / (disk_use + disk_free)) | round }}
    disk_free_percent:
      friendly_name: Disk Free /home
      icon_template: mdi:harddisk
      unit_of_measurement: '%'
      value_template: >-
        {{ 100 - states('sensor.disk_use_percent') | float | round }}
#
# RAM space
#
# @see /appdaemon/dashboards/Status.dash
# @see /groups/status.yaml
#
- platform: template
  sensors:
    memory_use_percent:
      friendly_name: Memory Use
      icon_template: mdi:memory
      unit_of_measurement: '%'
      value_template: >-
        {% set memory_use = states('sensor.memory_use') | float %}
        {% set memory_free = states('sensor.memory_free') | float %}
        {{ (100 * memory_use / (memory_use + memory_free)) | round }}
    memory_free_percent:
      friendly_name: Memory Free
      icon_template: mdi:memory
      unit_of_measurement: '%'
      value_template: >-
        {{ 100 - states('sensor.memory_use_percent') | float | round }}
#
# Host uptime
#
# @see /appdaemon/dashboards/Status.dash
# @see /groups/status.yaml
#
- platform: template
  sensors:
    uptime_host:
      friendly_name: Server Uptime
      icon_template: mdi:server
      value_template: >-
        {% set slb = states('sensor.since_last_boot').split(' ') %}
        {% set count = slb | length %}
        {% set hms = slb[count - 1] %}
        {% set hms_trimmed = hms.split('.')[0] %}
        {% set hms_split = hms_trimmed.split(':') %}
        {% set seconds = hms_split[2] | int %}
        {% set minutes = hms_split[1] | int %}
        {% set hours = hms_split[0] | int %}
        {% set days = slb[0]|int %}
        {% if hours == 0 and minutes == 0 %}
          {{ time }} seconds
        {% else %}
          {%- if days > 0 -%}
            {%- if days == 1 -%}
              1 day
            {%- else -%}
              {{ days }} days
            {%- endif -%}
          {%- endif -%}
          {%- if hours > 0 and days < 7 -%}
            {%- if days > 0 -%}
              {{ ', ' }}
            {%- endif -%}
            {%- if hours == 1 -%}
              1 hour
            {%- else -%}
              {{ hours }} hours
            {%- endif -%}
          {%- endif -%}
          {%- if days == 0 and minutes > 0 -%}
            {%- if hours > 0 -%}
              {{ ', ' }}{{ minutes }} min
            {%- else -%}
              {%- if minutes == 1 -%}
                1 minute
              {%- else -%}
                {{ minutes }} minutes
              {%- endif -%}
            {%- endif -%}
          {%- endif -%}
        {% endif %}
#
# Home Assistant uptime
#
# For Home Assistant process/container.
#
# @see /appdaemon/dashboards/Status.dash
# @see /groups/status.yaml
#
# @link https://home-assistant.io/components/sensor.uptime/
#
- platform: uptime
  name: Uptime
  scan_interval: 60
  unit_of_measurement: hours

- platform: template
  sensors:
    uptime_friendly:
      friendly_name: Uptime
      icon_template: mdi:home-assistant
      value_template: >-
        {% set uptime = states('sensor.uptime') | float %}
        {% set time = (3600 * uptime) | int %}
        {% set minutes = ((time % 3600) / 60) | int %}
        {% set hours = ((time % 86400) / 3600) | int %}
        {% set days = (time / 86400) | int %}
        {% if time < 60 %}
          {{ time }} seconds
        {% else %}
          {%- if days > 0 -%}
            {%- if days == 1 -%}
              1 day
            {%- else -%}
              {{ days }} days
            {%- endif -%}
          {%- endif -%}
          {%- if hours > 0 and days < 7 -%}
            {%- if days > 0 -%}
              {{ ', ' }}
            {%- endif -%}
            {%- if hours == 1 -%}
              1 hour
            {%- else -%}
              {{ hours }} hours
            {%- endif -%}
          {%- endif -%}
          {%- if days == 0 and minutes > 0 -%}
            {%- if hours > 0 -%}
              {{ ', ' }}{{ minutes }} min
            {%- else -%}
              {%- if minutes == 1 -%}
                1 minute
              {%- else -%}
                {{ minutes }} minutes
              {%- endif -%}
            {%- endif -%}
          {%- endif -%}
        {% endif %}
#
# CPU average load
#
# @see /appdaemon/dashboards/Status.dash
# @see /groups/status.yaml
#
- platform: template
  sensors:
    average_load:
      friendly_name: Average load
      icon_template: mdi:chip
      unit_of_measurement: '%'
      value_template: >-
         {% set load1 = '{0:0.2f}'.format(states('sensor.load_1m') | float) %}
         {% set load5 = '{0:0.2f}'.format(states('sensor.load_5m') | float) %}
         {% set load15 = '{0:0.2f}'.format(states('sensor.load_15m') | float) %}
         {{ load1 }} {{ load5 }} {{ load15 }}
#
# CPU cores count
#
# Useful to get an idea of the system load. Scan interval is set to daily,
# because it's quite unlikely that cores change ...often unless one plays with
# the VM's settings all the time.
#
# @see /customize.yaml
#
# @link https://home-assistant.io/components/sensor.command_line/
#
- platform: command_line
  name: CPU Cores
  scan_interval: 86400
  command: "grep 'model name' /proc/cpuinfo | wc -l"
  icon_template: mdi:chip


#
# CPU temperature
#
# @see /appdaemon/dashboards/Status.dash
# @see /groups/status.yaml
#
# @link https://community.home-assistant.io/t/displaying-cpu-temperature-within-home-assistant/8641
# @link https://home-assistant.io/components/sensor.command_line/
#
- platform: command_line
  name: CPU Temp
  scan_interval: 60
  unit_of_measurement: °C
  command: cat /sys/class/thermal/thermal_zone0/temp
  icon_template: mdi:thermometer
  value_template: '{{ (value | multiply(0.001)) | round(0) }}'


#
# File sizes
#
# @see /appdaemon/dashboards/Status.dash
# @see /groups/status.yaml
#
# @link https://www.home-assistant.io/components/sensor.filesize/
#
- platform: filesize
  file_paths:
    - /config/home-assistant_v2.db
    - /config/home-assistant.log

- platform: template
  sensors:
    database_size:
      friendly_name: Database Size
      icon_template: mdi:database
      unit_of_measurement: 'MiB'
      value_template: >-
         {{ states('sensor.homeassistant_v2db') | round }}
    log_size:
      friendly_name: Log Size
      icon_template: mdi:history
      unit_of_measurement: 'KiB'
      value_template: >-
         {{ (states.sensor.homeassistantlog.attributes.bytes / 1024) | round }}

